#!/usr/bin/env bash
# Summary: Display prefix for a php docker version
# Usage: phpdock prefix [--apache] [<version>]
#
# Displays complete image name of a php version. If no
# version is given, `phpdock prefix' displays the complete name 
# of the currently selected version.

[ -n "$PHPDOCK_DEBUG" ] && set -x

# Provide phpdock completions
if [ "$1" = "--complete" ]; then
  if [ "$#" -eq 1 ]; then
    echo system
    echo --help
    echo --apache
  fi
  exit 0
fi

# Config getopt
TEMP=`getopt -o a --long apache -n $PROG -- "$@"`
eval set -- "$TEMP"

MODE=php
# Parse arguments
while true ; do
  case "$1" in
    --apache)
      MODE=apache
      PARAM=--apache
      shift;;
    --) shift ; break ;;
    *) echo "Internal error!" ; exit 1 ;;
  esac
done

if [ -n "$1" ]; then
  PHP_DOCKER_IMAGE="$1"
elif [ -z "$PHP_DOCKER_IMAGE" ]; then
  PHP_DOCKER_IMAGE="$(phpdock-version-name $PARAM)"
  # Exit if no version setted
  if [ $? -ne 0 ]; then
    echo $PHP_DOCKER_IMAGE
    exit 1
  fi
fi


if [ "$PHP_DOCKER_IMAGE" = "system" ]; then
  whereis -b php | awk '{print $2}'
  exit 0
fi

containsElement () {
  local e match="$1"
  shift
  for e; do [[ "$e" == "$match" ]] && return 0; done
  return 1
}

PHPDOCK_PREFIX=(`docker images --format "{{.Repository}}:{{.Tag}}" | grep $MODE | grep $PHP_DOCKER_IMAGE`)

if ! containsElement $PHP_DOCKER_IMAGE ${PHPDOCK_PREFIX[@]} ; then
  echo "phpdock: version \`${PHP_DOCKER_IMAGE}' not installed $MODE" >&2
  exit 1
fi

echo $PHPDOCK_PREFIX
